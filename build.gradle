plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

jacoco {
	toolVersion = "0.8.11"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.liquibase:liquibase-core:4.25.1'
	testImplementation 'org.jacoco:org.jacoco.agent:0.8.11'

	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.3.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	implementation 'io.swagger.core.v3:swagger-annotations:2.2.20'
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false;
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

check.dependsOn jacocoTestCoverageVerification